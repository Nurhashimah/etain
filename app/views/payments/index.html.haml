- provide(:title, 'Payment')
- model_class = Payment
.page-header
  %h1=t('activerecord.attributes.payment.list')

.navbar.navbar-inverse
  .navbar-inner
    %ul.nav
      %li= link_to content_tag(:li, fa_icon(" ", text: (t 'actions.new'))), new_payment_path
    %ul.nav.pull-right
      %li.toga= link_to content_tag(:li, fa_icon("search", text: (t 'actions.search'))), "#", class: "index_search_bar"


%table.table.table-condensed.table-hover.table-striped
  %thead
    %tr
      %th{width: "25%"}=t('activerecord.attributes.payment.schedule_id')
      %th{width: "22%"}=t('activerecord.attributes.course.organizer')+" / "+t('activerecord.attributes.payment.customer_id')
      %th{width: "8%"}=t('activerecord.attributes.payment.method')
      /%th{width: "12%"}=t('activerecord.attributes.payment.auth_code')
      %th{width: "10%"}=t('activerecord.attributes.payment.amount')
      %th{width: "12%"}=t('activerecord.attributes.payment.confirmed_by')
      %th{width: "13%"}=t('activerecord.attributes.payment.confirmed_on')
      %th{width: "10%"}=t('activerecord.attributes.payment.status')
      /%th User
      /%th College
      /%th Data
      %th
  %tbody
    = render "index_search"
    - @payments.each do |payment|
      %tr
        %td= payment.booking_id.nil? ? payment.schedule.schedule_course_details : payment.booking.schedule.schedule_course_details
        %td
          /= payment.customer_id
          = payment.booking_id.nil? ? payment.schedule.schedulecourse.course_organizer+": "+payment.schedule.customers.count.to_s+" "+t('activerecord.attributes.schedule.pax') : payment.booking.participant.name
        %td=payment.try(:method)
        /%td= payment.auth_code
        %td= "RM "+sprintf("%.2f", payment.amount).to_s
        %td= payment.authorised_payer.name
        %td= payment.confirmed_on.try(:strftime, '%d %b %Y %H:%M')
        %td= payment.status
        /%td= payment.user_id
        /%td= payment.college_id
        /%td= payment.data
        = render :partial => 'action_menu', :locals => { :payment => payment }