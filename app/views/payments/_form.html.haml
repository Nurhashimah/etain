.container{:style => "padding-left: 60px;"}
  = form_for @payment, :html => { :class => 'form-horizontal' }  do |f|
    = render 'shared/error_messages', object: f.object

    .control-group
      = f.label  t('activerecord.attributes.payment.payment_for'), :class => 'control-label'
      .controls
        - aa='checked' if @payment.booking_id!=nil
        = f.check_box :by_booking, checked: aa
        .small=t('activerecord.attributes.payment.payment_type')
        
    #span_booking
      .control-group
        = f.label t('activerecord.attributes.payment.booking_id'), :class => 'control-label'
        .controls
          = f.collection_select :booking_id, Booking.all, :id, :schedule_details, {:include_blank => (t 'helpers.select')}, {:class => 'selectpicker mandatory'}
    #span_schedule 
      .control-group
        = f.label t('activerecord.attributes.payment.schedule_id'), :class => 'control-label'
        .controls
          /= f.collection_select :schedule_id, Schedule.joins(:customers).uniq, :id, :schedule_course_details, {:include_blank => (t 'helpers.select')}, {:class => 'selectpicker mandatory'}
          - arr=Array.new
          - arr << [(t 'helpers.select'),"", {'data'=>""}]
          - Schedule.joins(:customers).uniq.all.each{ |c| arr << [c.schedule_course_details, c.id, {'data'=>c.schedulecourse.fee}] }
          = select_tag("payment[schedule_id]", options_for_select(arr, @payment.schedule_id), {class: 'selectpicker mandatory', "data-width"=>'550px'})

    /.control-group
    /  = f.label t('activerecord.attributes.payment.customer_id'), :class => 'control-label'
    /  .controls= f.text_field :customer_id, :class => 'text_field '
    .control-group
      = f.label t('activerecord.attributes.payment.method'), :class => 'control-label'
      .controls
        = f.select :method, DropDown::PAYMENT_METHOD, {},{:class => 'selectpicker mandatory'}
    .control-group
      = f.label t('activerecord.attributes.payment.reference_no'), :class => 'control-label'
      .controls
        = f.text_field :reference_no, :class => 'text_field'
        .small=t('activerecord.attributes.payment.reference_caption')
    .control-group
      = f.label t('activerecord.attributes.payment.auth_code'), :class => 'control-label'
      .controls= f.text_field :auth_code, :class => 'text_field '
    .control-group
      = f.label t('activerecord.attributes.payment.amount'), :class => 'control-label'
      .controls
        = f.text_field :amount, :class => 'text_field mandatory'
        #course_fee
        .small=t('helpers.in_rm')
    .control-group
      = f.label t('activerecord.attributes.payment.confirmed_by'), :class => 'control-label'
      .controls
        #span_customer
          = f.collection_select :confirmed_by, Customer.order(name: :asc), :id, :id_no_with_name_position, {:include_blank => (t 'helpers.select')},{ :class => 'selectpicker mandatory'}
        #span_corporate
          = f.collection_select :confirmed_by, Customer.where(corporate: true).order(name: :asc), :id, :corporate_payer, {:include_blank => (t 'helpers.select')},{ :class => 'selectpicker mandatory'}
    .control-group
      = f.label t('activerecord.attributes.payment.confirmed_on'), :class => 'control-label'
      .controls= f.text_field :confirmed_on, :class => 'datetime_picker_reverse'
    .control-group
      = f.label :status, :class => 'control-label'
      .controls= f.text_field :status, :class => 'text_field'
    .control-group
      = f.label  t('helpers.user_id'), :class => 'control-label'
      .controls= f.number_field :user_id, :class => 'text_field', :readonly => 'readonly'
    .control-group
      = f.label  t('helpers.college_id'), :class => 'control-label'
      .controls= f.number_field :college_id, :class => 'text_field', :readonly => 'readonly'
    .control-group
      = f.label  t('helpers.data'), :class => 'control-label'
      .controls= f.text_field :data, :class => 'text_field', :readonly => 'readonly'

    .form-actions
      = f.submit (t 'helpers.links.submit'), :class => 'btn btn-primary'
      = link_to t('.cancel', :default => t("helpers.links.cancel")), |
        payments_path, :class => 'btn'

:javascript

$(document).ready(function(e){

  $("input[id='payment_by_booking']").change(function() {  
    if($('#payment_by_booking').is(':checked')) { 
      $("#span_booking").show("highlight"); 
      $("#span_schedule").hide(""); 
      $("#span_customer").show("highlight"); 
      $("#span_corporate").hide(""); 
    }else{
      $("#span_schedule").show("highlight"); 
      $("#span_booking").hide(""); 
      $("#span_corporate").show("highlight");
      $("#span_customer").hide(""); 
    }
  });
  $("input[id='payment_by_booking']").each(function() {  
    if($('#payment_by_booking').is(':checked')) { 
      $("#span_booking").show("highlight");
      $("#span_schedule").hide(""); 
      $("#span_customer").show("highlight"); 
      $("#span_corporate").hide(""); 
    }else{
      $("#span_schedule").show("highlight"); 
      $("#span_booking").hide(""); 
      $("#span_corporate").show("highlight"); 
      $("#span_customer").hide(""); 
    }
  });
  
  $('#payment_schedule_id').change(function(){
    var selected_schedule_fee = $(this).find('option:selected').attr('data');
    var amt = document.getElementById("payment_amount");
    
    if(typeof selected_schedule_fee != 'undefined')
    { amt.value=selected_schedule_fee;}
    else
    { amt.value=0;}
    
  });
  
});

/$('#course_fee').html("#{I18n.t('activerecord.attributes.schedule.organized_by')}"+"<b>"+selected_schedule_fee+"</b>") 
/$('#course_fee').html("0.00")