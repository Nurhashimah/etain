- provide(:title, 'bookings')
- model_class = Booking
.page-header
  %h1=t 'activerecord.attributes.booking.list'


.navbar.navbar-inverse
  .navbar-inner
    %ul.nav
      %li= link_to content_tag(:li, fa_icon(" ", text: (t 'actions.new'))), new_booking_path
    %ul.nav.pull-right
      %li= link_to content_tag(:li, fa_icon("search", text: (t 'actions.search'))), "#", class: "index_search_bar"


%table.table.table-condensed.table-hover.table-striped
  %thead
    %tr
      %th{width: '7%'}=t 'activerecord.attributes.booking.code'
      %th{width: '40%'}=t 'activerecord.attributes.booking.schedule_id'
      %th{width: '23%'}=t 'activerecord.attributes.booking.customer_id'
      %th{width: '15%'}=t 'activerecord.attributes.booking.warranty_id'
      %th{width: '15%'}Status 
      /%th User 
      /%th College 
      /%th Data 
      %th 
  %tbody
    = render "index_search"
    - @bookings.each do |booking|
      %tr
        %td= booking.code 
        %td
          = booking.schedule.schedule_course_details
          .small
            - unless booking.schedule.schedulecourse.nil? 
              - unless booking.schedule.schedulecourse.organizer.blank?
                ="("+(t 'activerecord.attributes.schedule.organized_by')
                %b= booking.schedule.try(:schedulecourse).try(:course_organizer) 
                - unless booking.schedule.schedulecourse.owner.blank?
                  =(t 'activerecord.attributes.schedule.for')
                  %b= booking.schedule.try(:schedulecourse).try(:course_owner) 
                =" )" unless booking.schedule.schedulecourse.course_organizer.nil? && booking.schedule.schedulecourse.owner.nil?
            

        %td= booking.participant.try(:id_no_with_name)
        %td= booking.warranty_id
        %td= booking.status 
        /%td= booking.user_id 
        /%td= booking.college_id 
        /%td= booking.data
        = render :partial => 'action_menu', :locals => { :booking => booking } 


