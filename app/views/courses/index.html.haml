- provide(:title, 'Course')
- model_class = Course
.page-header
  %h1=t('activerecord.attributes.course.list')
%p#notice= notice
.navbar.navbar-inverse
  .navbar-inner
    %ul.nav
      %li= link_to content_tag(:li, fa_icon(" ", text: (t 'actions.new'))), new_course_path
    %ul.nav.pull-right
      %li.toga= link_to content_tag(:li, fa_icon("search", text: (t 'actions.search'))), "#", class: "index_search_bar"


%table.table.table-condensed.table-hover.table-striped
  %thead
    %tr
      %th{width: "8%"}=sort_link @search, :code, t('activerecord.attributes.course.code')
      %th{width: "12%"}=t('activerecord.attributes.course.organizer')
      %th{width: "10%"}=sort_link @search, :category, t('activerecord.attributes.course.category')
      %th{width: "18%"}=sort_link @search, :topic, t('activerecord.attributes.course.topic')
      %th{width: "26%"}=t('activerecord.attributes.course.description')
      %th{width: "8%"}=sort_link @search, :fee, t('activerecord.attributes.course.fee')
      %th{width: "6%"}=sort_link @search, :duration, t('activerecord.attributes.course.duration')
      %th{width: "10%"}Year-Frequency
      /%th User
      /%th College
      /%th Data
      %th
  %tbody
    = render "index_search"
    - @courses.each do |course|
      %tr
        %td= course.code
        %td= course.try(:course_organizer) unless course.organizer.blank?
        %td= course.category
        %td= course.topic
        %td= course.description
        %td= course.fee.nil? ? "" : "RM "+sprintf("%.2f", course.fee).to_s
        %td= course.duration.to_s+" "+course.duration_details
        %td
          - if @search.frequency_search
            - selected_date=@search.frequency_search.to_date
            - schedules_ofyear=course.schedules.where('start_on >=? and start_on <=?', selected_date.beginning_of_year, selected_date.end_of_year)
            = "<b>#{selected_date.year}</b> : Total = #{schedules_ofyear.count}".html_safe
          - else
            - cnt=0
            - course.schedules.group_by{|x|x.start_on.year}.sort.reverse.each do |yyear, scs|
              = ((cnt+=1).to_s+") "+yyear.to_s+" - "+scs.count.to_s+'<br>').html_safe
        /%td= course.user_id
        /%td= course.college_id
        /%td= course.data
        = render :partial => 'action_menu', :locals => { :course => course }